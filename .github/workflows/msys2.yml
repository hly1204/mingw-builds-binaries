name: x86_64 release builds

on:
  push:
    tags:
      - "*-rt_*-rev*"

jobs:
  split-tag:
    runs-on: ubuntu-latest
    outputs:
      gcc-version: ${{ steps.get-gcc-version.outputs.version }}
      rt-version: ${{ steps.get-rt-version.outputs.version }}
      mingw-rev: ${{ steps.get-mingw-revision.outputs.rev }}
    steps:
      - id: get-gcc-version
        run: echo "version=$(echo ${{ github.ref_name }} | cut -d- -f1)" >> $GITHUB_OUTPUT
      - id: get-rt-version
        run: echo "version=$(echo ${{ github.ref_name }} | cut -d- -f2 | cut -c4-)" >> $GITHUB_OUTPUT
      - id: get-mingw-revision
        run: echo "rev=$(echo ${{ github.ref_name }} | cut -d- -f3 | cut -c4-)" >> $GITHUB_OUTPUT

  build:
    needs: split-tag
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { arch: x86_64, threads: win32, exceptions: seh, msvcrt: msvcrt, sys: MINGW64 }
          - { arch: x86_64, threads: win32, exceptions: seh, msvcrt: ucrt, sys: UCRT64 }

    steps:
      - uses: actions/checkout@v2
        with:
          repository: 'hly1204/mingw-builds'
          ref: 'develop'

      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.sys }}
          update: true

      - name: Build GCC Toolchain
        shell: msys2 {0}
        run: >-
          ./build
          --mode=gcc-${{ needs.split-tag.outputs.gcc-version }}
          --buildroot=/c/buildroot
          --jobs=4
          --bootstrapall
          --rev=${{ needs.split-tag.outputs.mingw-rev }}
          --with-default-msvcrt=${{ matrix.msvcrt }}
          --rt-version=${{ needs.split-tag.outputs.rt-version }}
          --threads=${{ matrix.threads }}
          --exceptions=${{ matrix.exceptions }}
          --arch=${{ matrix.arch }}
          --enable-languages=c,c++,fortran
          --no-multilib

      - name: Build CMake & Ninja
        shell: msys2 {0}
        run: |
          export MINGW_HOME=/c/buildroot/${{ matrix.arch }}-$(echo ${{ needs.split-tag.outputs.gcc-version }} | tr -d .)-${{ matrix.threads }}-${{ matrix.exceptions }}-${{ matrix.msvcrt }}-rt_${{ needs.split-tag.outputs.rt-version }}-rev${{ needs.split-tag.outputs.mingw-rev }}/mingw64
          export PATH=$PATH:$MINGW_HOME/bin:$MINGW_HOME/opt/bin
          wget https://github.com/Kitware/CMake/releases/download/v4.0.3/cmake-4.0.3.tar.gz
          tar -xzf cmake-4.0.3.tar.gz
          mkdir -p cmake.build && cd cmake.build
          ../cmake-4.0.3/configure --parallel=4 --generator="Unix Makefiles" --prefix=$MINGW_HOME
          make install/strip -j 4
          cd ..
          wget https://github.com/ninja-build/ninja/archive/refs/tags/v1.13.1.tar.gz
          tar -xzf v1.13.1.tar.gz
          cmake -B ninja.build -G "Unix Makefiles" -D CMAKE_BUILD_TYPE=Release -S ninja-1.13.1
          cmake --build ninja.build --parallel 4
          cmake --install ninja.build --prefix=$MINGW_HOME --strip

      - name: Pack
        shell: msys2 {0}
        run: |
          7z /c/buildroot/archives/${{ matrix.arch }}-${{ matrix.threads }}-${{ matrix.exceptions }}-${{ matrix.msvcrt }}/${{ matrix.arch }}-gcc-${{ needs.split-tag.outputs.gcc-version }}-${{ matrix.threads }}-${{ matrix.exceptions }}-${{ matrix.msvcrt }}-rt_${{ needs.split-tag.outputs.rt-version }}-rev${{ needs.split-tag.outputs.mingw-rev }}.7z /c/buildroot/${{ matrix.arch }}-$(echo ${{ needs.split-tag.outputs.gcc-version }} | tr -d .)-${{ matrix.threads }}-${{ matrix.exceptions }}-${{ matrix.msvcrt }}-rt_${{ needs.split-tag.outputs.rt-version }}-rev${{ needs.split-tag.outputs.mingw-rev }}/mingw64

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.arch }}-${{ matrix.threads }}-${{ matrix.exceptions }}-${{ matrix.msvcrt }}
          path: c:/buildroot/archives/

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          path: ./
          merge-multiple: true

      - name: Upload to Release
        id: upload_to_release
        uses: softprops/action-gh-release@v1
        with:
          files: "*.7z"